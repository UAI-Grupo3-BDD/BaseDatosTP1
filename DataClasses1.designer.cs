#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BaseDatosTP1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BDTP1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    partial void InsertUsuarioInterno(UsuarioInterno instance);
    partial void UpdateUsuarioInterno(UsuarioInterno instance);
    partial void DeleteUsuarioInterno(UsuarioInterno instance);
    partial void InsertSector(Sector instance);
    partial void UpdateSector(Sector instance);
    partial void DeleteSector(Sector instance);
    partial void InsertSectorDetalle(SectorDetalle instance);
    partial void UpdateSectorDetalle(SectorDetalle instance);
    partial void DeleteSectorDetalle(SectorDetalle instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::BaseDatosTP1.Properties.Settings.Default.BDTP1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Region> Region
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<UsuarioInterno> UsuarioInterno
		{
			get
			{
				return this.GetTable<UsuarioInterno>();
			}
		}
		
		public System.Data.Linq.Table<Sector> Sector
		{
			get
			{
				return this.GetTable<Sector>();
			}
		}
		
		public System.Data.Linq.Table<SectorDetalle> SectorDetalle
		{
			get
			{
				return this.GetTable<SectorDetalle>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Region")]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Region;
		
		private string _Codigo;
		
		private string _Descripcion;
		
		private string _Empresa;
		
		private bool _Activo;
		
		private EntitySet<Sector> _Sector;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_RegionChanging(int value);
    partial void OnId_RegionChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnEmpresaChanging(string value);
    partial void OnEmpresaChanged();
    partial void OnActivoChanging(bool value);
    partial void OnActivoChanged();
    #endregion
		
		public Region()
		{
			this._Sector = new EntitySet<Sector>(new Action<Sector>(this.attach_Sector), new Action<Sector>(this.detach_Sector));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Region", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Region
		{
			get
			{
				return this._Id_Region;
			}
			set
			{
				if ((this._Id_Region != value))
				{
					this.OnId_RegionChanging(value);
					this.SendPropertyChanging();
					this._Id_Region = value;
					this.SendPropertyChanged("Id_Region");
					this.OnId_RegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empresa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Empresa
		{
			get
			{
				return this._Empresa;
			}
			set
			{
				if ((this._Empresa != value))
				{
					this.OnEmpresaChanging(value);
					this.SendPropertyChanging();
					this._Empresa = value;
					this.SendPropertyChanged("Empresa");
					this.OnEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit NOT NULL")]
		public bool Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Sector", Storage="_Sector", ThisKey="Id_Region", OtherKey="ID_Region")]
		public EntitySet<Sector> Sector
		{
			get
			{
				return this._Sector;
			}
			set
			{
				this._Sector.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sector(Sector entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_Sector(Sector entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsuarioInterno")]
	public partial class UsuarioInterno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_UsuarioInterno;
		
		private string _Username;
		
		private string _Email;
		
		private string _Nombre;
		
		private string _CarpetaInforme;
		
		private System.Nullable<bool> _Activo;
		
		private EntitySet<SectorDetalle> _SectorDetalle;
		
		private EntitySet<SectorDetalle> _SectorDetalle1;
		
		private EntitySet<SectorDetalle> _SectorDetalle2;
		
		private EntitySet<SectorDetalle> _SectorDetalle3;
		
		private EntitySet<SectorDetalle> _SectorDetalle4;
		
		private EntitySet<SectorDetalle> _SectorDetalle5;
		
		private EntitySet<SectorDetalle> _SectorDetalle6;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_UsuarioInternoChanging(int value);
    partial void OnId_UsuarioInternoChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCarpetaInformeChanging(string value);
    partial void OnCarpetaInformeChanged();
    partial void OnActivoChanging(System.Nullable<bool> value);
    partial void OnActivoChanged();
    #endregion
		
		public UsuarioInterno()
		{
			this._SectorDetalle = new EntitySet<SectorDetalle>(new Action<SectorDetalle>(this.attach_SectorDetalle), new Action<SectorDetalle>(this.detach_SectorDetalle));
			this._SectorDetalle1 = new EntitySet<SectorDetalle>(new Action<SectorDetalle>(this.attach_SectorDetalle1), new Action<SectorDetalle>(this.detach_SectorDetalle1));
			this._SectorDetalle2 = new EntitySet<SectorDetalle>(new Action<SectorDetalle>(this.attach_SectorDetalle2), new Action<SectorDetalle>(this.detach_SectorDetalle2));
			this._SectorDetalle3 = new EntitySet<SectorDetalle>(new Action<SectorDetalle>(this.attach_SectorDetalle3), new Action<SectorDetalle>(this.detach_SectorDetalle3));
			this._SectorDetalle4 = new EntitySet<SectorDetalle>(new Action<SectorDetalle>(this.attach_SectorDetalle4), new Action<SectorDetalle>(this.detach_SectorDetalle4));
			this._SectorDetalle5 = new EntitySet<SectorDetalle>(new Action<SectorDetalle>(this.attach_SectorDetalle5), new Action<SectorDetalle>(this.detach_SectorDetalle5));
			this._SectorDetalle6 = new EntitySet<SectorDetalle>(new Action<SectorDetalle>(this.attach_SectorDetalle6), new Action<SectorDetalle>(this.detach_SectorDetalle6));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_UsuarioInterno", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_UsuarioInterno
		{
			get
			{
				return this._Id_UsuarioInterno;
			}
			set
			{
				if ((this._Id_UsuarioInterno != value))
				{
					this.OnId_UsuarioInternoChanging(value);
					this.SendPropertyChanging();
					this._Id_UsuarioInterno = value;
					this.SendPropertyChanged("Id_UsuarioInterno");
					this.OnId_UsuarioInternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(150)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarpetaInforme", DbType="VarChar(500)")]
		public string CarpetaInforme
		{
			get
			{
				return this._CarpetaInforme;
			}
			set
			{
				if ((this._CarpetaInforme != value))
				{
					this.OnCarpetaInformeChanging(value);
					this.SendPropertyChanging();
					this._CarpetaInforme = value;
					this.SendPropertyChanged("CarpetaInforme");
					this.OnCarpetaInformeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit")]
		public System.Nullable<bool> Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioInterno_SectorDetalle", Storage="_SectorDetalle", ThisKey="Id_UsuarioInterno", OtherKey="ResponsableInstalacion")]
		public EntitySet<SectorDetalle> SectorDetalle
		{
			get
			{
				return this._SectorDetalle;
			}
			set
			{
				this._SectorDetalle.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioInterno_SectorDetalle1", Storage="_SectorDetalle1", ThisKey="Id_UsuarioInterno", OtherKey="GestorAdministrativo")]
		public EntitySet<SectorDetalle> SectorDetalle1
		{
			get
			{
				return this._SectorDetalle1;
			}
			set
			{
				this._SectorDetalle1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioInterno_SectorDetalle2", Storage="_SectorDetalle2", ThisKey="Id_UsuarioInterno", OtherKey="SupervisorInstalacion")]
		public EntitySet<SectorDetalle> SectorDetalle2
		{
			get
			{
				return this._SectorDetalle2;
			}
			set
			{
				this._SectorDetalle2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioInterno_SectorDetalle3", Storage="_SectorDetalle3", ThisKey="Id_UsuarioInterno", OtherKey="ResponsableZonalSP")]
		public EntitySet<SectorDetalle> SectorDetalle3
		{
			get
			{
				return this._SectorDetalle3;
			}
			set
			{
				this._SectorDetalle3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioInterno_SectorDetalle4", Storage="_SectorDetalle4", ThisKey="Id_UsuarioInterno", OtherKey="GerenteRegional")]
		public EntitySet<SectorDetalle> SectorDetalle4
		{
			get
			{
				return this._SectorDetalle4;
			}
			set
			{
				this._SectorDetalle4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioInterno_SectorDetalle5", Storage="_SectorDetalle5", ThisKey="Id_UsuarioInterno", OtherKey="RepresentanteSP")]
		public EntitySet<SectorDetalle> SectorDetalle5
		{
			get
			{
				return this._SectorDetalle5;
			}
			set
			{
				this._SectorDetalle5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioInterno_SectorDetalle6", Storage="_SectorDetalle6", ThisKey="Id_UsuarioInterno", OtherKey="DirectorTecnico")]
		public EntitySet<SectorDetalle> SectorDetalle6
		{
			get
			{
				return this._SectorDetalle6;
			}
			set
			{
				this._SectorDetalle6.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SectorDetalle(SectorDetalle entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioInterno = this;
		}
		
		private void detach_SectorDetalle(SectorDetalle entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioInterno = null;
		}
		
		private void attach_SectorDetalle1(SectorDetalle entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioInterno1 = this;
		}
		
		private void detach_SectorDetalle1(SectorDetalle entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioInterno1 = null;
		}
		
		private void attach_SectorDetalle2(SectorDetalle entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioInterno2 = this;
		}
		
		private void detach_SectorDetalle2(SectorDetalle entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioInterno2 = null;
		}
		
		private void attach_SectorDetalle3(SectorDetalle entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioInterno3 = this;
		}
		
		private void detach_SectorDetalle3(SectorDetalle entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioInterno3 = null;
		}
		
		private void attach_SectorDetalle4(SectorDetalle entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioInterno4 = this;
		}
		
		private void detach_SectorDetalle4(SectorDetalle entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioInterno4 = null;
		}
		
		private void attach_SectorDetalle5(SectorDetalle entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioInterno5 = this;
		}
		
		private void detach_SectorDetalle5(SectorDetalle entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioInterno5 = null;
		}
		
		private void attach_SectorDetalle6(SectorDetalle entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioInterno6 = this;
		}
		
		private void detach_SectorDetalle6(SectorDetalle entity)
		{
			this.SendPropertyChanging();
			entity.UsuarioInterno6 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sector")]
	public partial class Sector : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Sector;
		
		private string _Codigo;
		
		private string _Descripcion;
		
		private int _ID_Region;
		
		private bool _Activo;
		
		private EntitySet<SectorDetalle> _SectorDetalle;
		
		private EntityRef<Region> _Region;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SectorChanging(int value);
    partial void OnID_SectorChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnID_RegionChanging(int value);
    partial void OnID_RegionChanged();
    partial void OnActivoChanging(bool value);
    partial void OnActivoChanged();
    #endregion
		
		public Sector()
		{
			this._SectorDetalle = new EntitySet<SectorDetalle>(new Action<SectorDetalle>(this.attach_SectorDetalle), new Action<SectorDetalle>(this.detach_SectorDetalle));
			this._Region = default(EntityRef<Region>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Sector", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Sector
		{
			get
			{
				return this._ID_Sector;
			}
			set
			{
				if ((this._ID_Sector != value))
				{
					this.OnID_SectorChanging(value);
					this.SendPropertyChanging();
					this._ID_Sector = value;
					this.SendPropertyChanged("ID_Sector");
					this.OnID_SectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Region", DbType="Int NOT NULL")]
		public int ID_Region
		{
			get
			{
				return this._ID_Region;
			}
			set
			{
				if ((this._ID_Region != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_RegionChanging(value);
					this.SendPropertyChanging();
					this._ID_Region = value;
					this.SendPropertyChanged("ID_Region");
					this.OnID_RegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit NOT NULL")]
		public bool Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sector_SectorDetalle", Storage="_SectorDetalle", ThisKey="ID_Sector", OtherKey="id_Sector")]
		public EntitySet<SectorDetalle> SectorDetalle
		{
			get
			{
				return this._SectorDetalle;
			}
			set
			{
				this._SectorDetalle.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Sector", Storage="_Region", ThisKey="ID_Region", OtherKey="Id_Region", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.Sector.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.Sector.Add(this);
						this._ID_Region = value.Id_Region;
					}
					else
					{
						this._ID_Region = default(int);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SectorDetalle(SectorDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Sector = this;
		}
		
		private void detach_SectorDetalle(SectorDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Sector = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SectorDetalle")]
	public partial class SectorDetalle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_SectorDetalle;
		
		private string _Codigo;
		
		private string _Area;
		
		private string _Detalle;
		
		private int _id_Sector;
		
		private int _ResponsableInstalacion;
		
		private int _GestorAdministrativo;
		
		private bool _Activo;
		
		private int _SupervisorInstalacion;
		
		private int _ResponsableZonalSP;
		
		private int _GerenteRegional;
		
		private int _RepresentanteSP;
		
		private int _DirectorTecnico;
		
		private EntityRef<Sector> _Sector;
		
		private EntityRef<UsuarioInterno> _UsuarioInterno;
		
		private EntityRef<UsuarioInterno> _UsuarioInterno1;
		
		private EntityRef<UsuarioInterno> _UsuarioInterno2;
		
		private EntityRef<UsuarioInterno> _UsuarioInterno3;
		
		private EntityRef<UsuarioInterno> _UsuarioInterno4;
		
		private EntityRef<UsuarioInterno> _UsuarioInterno5;
		
		private EntityRef<UsuarioInterno> _UsuarioInterno6;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_SectorDetalleChanging(int value);
    partial void Onid_SectorDetalleChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnDetalleChanging(string value);
    partial void OnDetalleChanged();
    partial void Onid_SectorChanging(int value);
    partial void Onid_SectorChanged();
    partial void OnResponsableInstalacionChanging(int value);
    partial void OnResponsableInstalacionChanged();
    partial void OnGestorAdministrativoChanging(int value);
    partial void OnGestorAdministrativoChanged();
    partial void OnActivoChanging(bool value);
    partial void OnActivoChanged();
    partial void OnSupervisorInstalacionChanging(int value);
    partial void OnSupervisorInstalacionChanged();
    partial void OnResponsableZonalSPChanging(int value);
    partial void OnResponsableZonalSPChanged();
    partial void OnGerenteRegionalChanging(int value);
    partial void OnGerenteRegionalChanged();
    partial void OnRepresentanteSPChanging(int value);
    partial void OnRepresentanteSPChanged();
    partial void OnDirectorTecnicoChanging(int value);
    partial void OnDirectorTecnicoChanged();
    #endregion
		
		public SectorDetalle()
		{
			this._Sector = default(EntityRef<Sector>);
			this._UsuarioInterno = default(EntityRef<UsuarioInterno>);
			this._UsuarioInterno1 = default(EntityRef<UsuarioInterno>);
			this._UsuarioInterno2 = default(EntityRef<UsuarioInterno>);
			this._UsuarioInterno3 = default(EntityRef<UsuarioInterno>);
			this._UsuarioInterno4 = default(EntityRef<UsuarioInterno>);
			this._UsuarioInterno5 = default(EntityRef<UsuarioInterno>);
			this._UsuarioInterno6 = default(EntityRef<UsuarioInterno>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_SectorDetalle", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_SectorDetalle
		{
			get
			{
				return this._id_SectorDetalle;
			}
			set
			{
				if ((this._id_SectorDetalle != value))
				{
					this.Onid_SectorDetalleChanging(value);
					this.SendPropertyChanging();
					this._id_SectorDetalle = value;
					this.SendPropertyChanged("id_SectorDetalle");
					this.Onid_SectorDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codigo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detalle", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Detalle
		{
			get
			{
				return this._Detalle;
			}
			set
			{
				if ((this._Detalle != value))
				{
					this.OnDetalleChanging(value);
					this.SendPropertyChanging();
					this._Detalle = value;
					this.SendPropertyChanged("Detalle");
					this.OnDetalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Sector", DbType="Int NOT NULL")]
		public int id_Sector
		{
			get
			{
				return this._id_Sector;
			}
			set
			{
				if ((this._id_Sector != value))
				{
					if (this._Sector.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_SectorChanging(value);
					this.SendPropertyChanging();
					this._id_Sector = value;
					this.SendPropertyChanged("id_Sector");
					this.Onid_SectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsableInstalacion", DbType="Int NOT NULL")]
		public int ResponsableInstalacion
		{
			get
			{
				return this._ResponsableInstalacion;
			}
			set
			{
				if ((this._ResponsableInstalacion != value))
				{
					if (this._UsuarioInterno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResponsableInstalacionChanging(value);
					this.SendPropertyChanging();
					this._ResponsableInstalacion = value;
					this.SendPropertyChanged("ResponsableInstalacion");
					this.OnResponsableInstalacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GestorAdministrativo", DbType="Int NOT NULL")]
		public int GestorAdministrativo
		{
			get
			{
				return this._GestorAdministrativo;
			}
			set
			{
				if ((this._GestorAdministrativo != value))
				{
					if (this._UsuarioInterno1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGestorAdministrativoChanging(value);
					this.SendPropertyChanging();
					this._GestorAdministrativo = value;
					this.SendPropertyChanged("GestorAdministrativo");
					this.OnGestorAdministrativoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit NOT NULL")]
		public bool Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupervisorInstalacion", DbType="Int NOT NULL")]
		public int SupervisorInstalacion
		{
			get
			{
				return this._SupervisorInstalacion;
			}
			set
			{
				if ((this._SupervisorInstalacion != value))
				{
					if (this._UsuarioInterno2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupervisorInstalacionChanging(value);
					this.SendPropertyChanging();
					this._SupervisorInstalacion = value;
					this.SendPropertyChanged("SupervisorInstalacion");
					this.OnSupervisorInstalacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsableZonalSP", DbType="Int NOT NULL")]
		public int ResponsableZonalSP
		{
			get
			{
				return this._ResponsableZonalSP;
			}
			set
			{
				if ((this._ResponsableZonalSP != value))
				{
					if (this._UsuarioInterno3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResponsableZonalSPChanging(value);
					this.SendPropertyChanging();
					this._ResponsableZonalSP = value;
					this.SendPropertyChanged("ResponsableZonalSP");
					this.OnResponsableZonalSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GerenteRegional", DbType="Int NOT NULL")]
		public int GerenteRegional
		{
			get
			{
				return this._GerenteRegional;
			}
			set
			{
				if ((this._GerenteRegional != value))
				{
					if (this._UsuarioInterno4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGerenteRegionalChanging(value);
					this.SendPropertyChanging();
					this._GerenteRegional = value;
					this.SendPropertyChanged("GerenteRegional");
					this.OnGerenteRegionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepresentanteSP", DbType="Int NOT NULL")]
		public int RepresentanteSP
		{
			get
			{
				return this._RepresentanteSP;
			}
			set
			{
				if ((this._RepresentanteSP != value))
				{
					if (this._UsuarioInterno5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRepresentanteSPChanging(value);
					this.SendPropertyChanging();
					this._RepresentanteSP = value;
					this.SendPropertyChanged("RepresentanteSP");
					this.OnRepresentanteSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectorTecnico", DbType="Int NOT NULL")]
		public int DirectorTecnico
		{
			get
			{
				return this._DirectorTecnico;
			}
			set
			{
				if ((this._DirectorTecnico != value))
				{
					if (this._UsuarioInterno6.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectorTecnicoChanging(value);
					this.SendPropertyChanging();
					this._DirectorTecnico = value;
					this.SendPropertyChanged("DirectorTecnico");
					this.OnDirectorTecnicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sector_SectorDetalle", Storage="_Sector", ThisKey="id_Sector", OtherKey="ID_Sector", IsForeignKey=true)]
		public Sector Sector
		{
			get
			{
				return this._Sector.Entity;
			}
			set
			{
				Sector previousValue = this._Sector.Entity;
				if (((previousValue != value) 
							|| (this._Sector.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sector.Entity = null;
						previousValue.SectorDetalle.Remove(this);
					}
					this._Sector.Entity = value;
					if ((value != null))
					{
						value.SectorDetalle.Add(this);
						this._id_Sector = value.ID_Sector;
					}
					else
					{
						this._id_Sector = default(int);
					}
					this.SendPropertyChanged("Sector");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioInterno_SectorDetalle", Storage="_UsuarioInterno", ThisKey="ResponsableInstalacion", OtherKey="Id_UsuarioInterno", IsForeignKey=true)]
		public UsuarioInterno UsuarioInterno
		{
			get
			{
				return this._UsuarioInterno.Entity;
			}
			set
			{
				UsuarioInterno previousValue = this._UsuarioInterno.Entity;
				if (((previousValue != value) 
							|| (this._UsuarioInterno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsuarioInterno.Entity = null;
						previousValue.SectorDetalle.Remove(this);
					}
					this._UsuarioInterno.Entity = value;
					if ((value != null))
					{
						value.SectorDetalle.Add(this);
						this._ResponsableInstalacion = value.Id_UsuarioInterno;
					}
					else
					{
						this._ResponsableInstalacion = default(int);
					}
					this.SendPropertyChanged("UsuarioInterno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioInterno_SectorDetalle1", Storage="_UsuarioInterno1", ThisKey="GestorAdministrativo", OtherKey="Id_UsuarioInterno", IsForeignKey=true)]
		public UsuarioInterno UsuarioInterno1
		{
			get
			{
				return this._UsuarioInterno1.Entity;
			}
			set
			{
				UsuarioInterno previousValue = this._UsuarioInterno1.Entity;
				if (((previousValue != value) 
							|| (this._UsuarioInterno1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsuarioInterno1.Entity = null;
						previousValue.SectorDetalle1.Remove(this);
					}
					this._UsuarioInterno1.Entity = value;
					if ((value != null))
					{
						value.SectorDetalle1.Add(this);
						this._GestorAdministrativo = value.Id_UsuarioInterno;
					}
					else
					{
						this._GestorAdministrativo = default(int);
					}
					this.SendPropertyChanged("UsuarioInterno1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioInterno_SectorDetalle2", Storage="_UsuarioInterno2", ThisKey="SupervisorInstalacion", OtherKey="Id_UsuarioInterno", IsForeignKey=true)]
		public UsuarioInterno UsuarioInterno2
		{
			get
			{
				return this._UsuarioInterno2.Entity;
			}
			set
			{
				UsuarioInterno previousValue = this._UsuarioInterno2.Entity;
				if (((previousValue != value) 
							|| (this._UsuarioInterno2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsuarioInterno2.Entity = null;
						previousValue.SectorDetalle2.Remove(this);
					}
					this._UsuarioInterno2.Entity = value;
					if ((value != null))
					{
						value.SectorDetalle2.Add(this);
						this._SupervisorInstalacion = value.Id_UsuarioInterno;
					}
					else
					{
						this._SupervisorInstalacion = default(int);
					}
					this.SendPropertyChanged("UsuarioInterno2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioInterno_SectorDetalle3", Storage="_UsuarioInterno3", ThisKey="ResponsableZonalSP", OtherKey="Id_UsuarioInterno", IsForeignKey=true)]
		public UsuarioInterno UsuarioInterno3
		{
			get
			{
				return this._UsuarioInterno3.Entity;
			}
			set
			{
				UsuarioInterno previousValue = this._UsuarioInterno3.Entity;
				if (((previousValue != value) 
							|| (this._UsuarioInterno3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsuarioInterno3.Entity = null;
						previousValue.SectorDetalle3.Remove(this);
					}
					this._UsuarioInterno3.Entity = value;
					if ((value != null))
					{
						value.SectorDetalle3.Add(this);
						this._ResponsableZonalSP = value.Id_UsuarioInterno;
					}
					else
					{
						this._ResponsableZonalSP = default(int);
					}
					this.SendPropertyChanged("UsuarioInterno3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioInterno_SectorDetalle4", Storage="_UsuarioInterno4", ThisKey="GerenteRegional", OtherKey="Id_UsuarioInterno", IsForeignKey=true)]
		public UsuarioInterno UsuarioInterno4
		{
			get
			{
				return this._UsuarioInterno4.Entity;
			}
			set
			{
				UsuarioInterno previousValue = this._UsuarioInterno4.Entity;
				if (((previousValue != value) 
							|| (this._UsuarioInterno4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsuarioInterno4.Entity = null;
						previousValue.SectorDetalle4.Remove(this);
					}
					this._UsuarioInterno4.Entity = value;
					if ((value != null))
					{
						value.SectorDetalle4.Add(this);
						this._GerenteRegional = value.Id_UsuarioInterno;
					}
					else
					{
						this._GerenteRegional = default(int);
					}
					this.SendPropertyChanged("UsuarioInterno4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioInterno_SectorDetalle5", Storage="_UsuarioInterno5", ThisKey="RepresentanteSP", OtherKey="Id_UsuarioInterno", IsForeignKey=true)]
		public UsuarioInterno UsuarioInterno5
		{
			get
			{
				return this._UsuarioInterno5.Entity;
			}
			set
			{
				UsuarioInterno previousValue = this._UsuarioInterno5.Entity;
				if (((previousValue != value) 
							|| (this._UsuarioInterno5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsuarioInterno5.Entity = null;
						previousValue.SectorDetalle5.Remove(this);
					}
					this._UsuarioInterno5.Entity = value;
					if ((value != null))
					{
						value.SectorDetalle5.Add(this);
						this._RepresentanteSP = value.Id_UsuarioInterno;
					}
					else
					{
						this._RepresentanteSP = default(int);
					}
					this.SendPropertyChanged("UsuarioInterno5");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsuarioInterno_SectorDetalle6", Storage="_UsuarioInterno6", ThisKey="DirectorTecnico", OtherKey="Id_UsuarioInterno", IsForeignKey=true)]
		public UsuarioInterno UsuarioInterno6
		{
			get
			{
				return this._UsuarioInterno6.Entity;
			}
			set
			{
				UsuarioInterno previousValue = this._UsuarioInterno6.Entity;
				if (((previousValue != value) 
							|| (this._UsuarioInterno6.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsuarioInterno6.Entity = null;
						previousValue.SectorDetalle6.Remove(this);
					}
					this._UsuarioInterno6.Entity = value;
					if ((value != null))
					{
						value.SectorDetalle6.Add(this);
						this._DirectorTecnico = value.Id_UsuarioInterno;
					}
					else
					{
						this._DirectorTecnico = default(int);
					}
					this.SendPropertyChanged("UsuarioInterno6");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
